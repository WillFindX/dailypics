def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty("flutter.sdk")
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 29

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
    }

    lintOptions {
        disable "InvalidPackage"
    }

    defaultConfig {
        applicationId "cn.dailypics.android"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        manifestPlaceholders = ["ADMOB_APP_ID": project["admobAppId"]]
    }

    signingConfigs {
        release {
            storeFile file(project["signingStoreFile"])
            storePassword project["signingStorePassword"]
            keyAlias project["signingKeyAlias"]
            keyPassword project["signingKeyPassword"]
        }
    }

    buildTypes {
        release {
            if (project["signingStoreFile"] != null) {
                signingConfig signingConfigs.release
            } else {
                signingConfig signingConfigs.debug
            }
        }
    }
}

flutter {
    source "../.."
}

dependencies {
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.61"
}
